| TinyScheme |;

Exec execFileName: "/home/kofee/School/MI-FLP/SchemeInterpreter/charsprovider.tt";
Exec execFileName: "/home/kofee/School/MI-FLP/SchemeInterpreter/schemeobject.tt";
Exec execFileName: "/home/kofee/School/MI-FLP/SchemeInterpreter/schemereader.tt";
Exec execFileName: "/home/kofee/School/MI-FLP/SchemeInterpreter/schemeenv.tt";
Exec execFileName: "/home/kofee/School/MI-FLP/SchemeInterpreter/schemebuiltins.tt";
Exec execFileName: "/home/kofee/School/MI-FLP/SchemeInterpreter/schemeevaluator.tt";

TinyScheme = Object createWith:
{
	"repl", [ :repl |
		In read;
		this fepl: In whole: True
	],
	"globalEnv", [
		| tmp |;
		tmp = SchemeEnv new;
		tmp setUpGlobals; tmp;
		SchemeBuiltins installInEnv: tmp;
		tmp
	] value,
	"fepl:whole:", [ :fepl: :whole: |
		| expr fun |;
		fun =
		[
			expr = SchemeReader readFile: fepl;
			Out writeLine: (expr toDisplayable);
			SchemeEvaluator eval: expr inEnv: globalEnv
		];
		whole
			ifTrue:
			[
				While
					isTrue:
					[
						fepl isEOF not
					]
					do:
					[
						fun value
					]
			]
			ifFalse:
			[
				fun value
			]
	]
};

Env installGlobalVarName: "TinyScheme" withValue: TinyScheme;

TinyScheme

